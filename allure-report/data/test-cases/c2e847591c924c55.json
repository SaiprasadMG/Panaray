{
  "uid" : "c2e847591c924c55",
  "name" : "test_login_with_valid_email_and_invalid_password_Duplicate",
  "fullName" : "Tests.test_Login(duplicate).TestPanarayLoginDuplicate#test_login_with_valid_email_and_invalid_password_Duplicate",
  "historyId" : "9581a2f8ea7f6829aae721e266b65c65",
  "time" : {
    "start" : 1695667565279,
    "stop" : 1695667568221,
    "duration" : 2942
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <Tests.test_Login(duplicate).TestPanarayLoginDuplicate object at 0x00000215002B5A50>\n\n    def test_login_with_valid_email_and_invalid_password_Duplicate(self):\n        login = Login_Page(self.driver)\n        login.login_with_credentials(login.valid_email, self.fake_password())\n        login.display_error_msg()\n        expected_error_msg = \"Email or Password not recognized, try again.1111\"\n>       login.assert_error_msg(expected_error_msg)\n\nTests\\test_Login(duplicate).py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.Login_Page.Login_Page object at 0x0000021500801050>, expected_text = 'Email or Password not recognized, try again.1111'\n\n    def assert_error_msg(self, expected_text):\n        message = self.driver.find_element(By.XPATH, self.error_message_locator).text\n>       assert message == expected_text\nE       AssertionError\n\nPages\\Login_Page.py:34: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "setup_and_teardown",
    "time" : {
      "start" : 1695667540530,
      "stop" : 1695667565277,
      "duration" : 24747
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1695667460576,
      "stop" : 1695667460664,
      "duration" : 88
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "log_on_failure",
    "time" : {
      "start" : 1695667565277,
      "stop" : 1695667565277,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "setup_and_teardown::0",
    "time" : {
      "start" : 1695667568465,
      "stop" : 1695667570619,
      "duration" : 2154
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "log_on_failure::0",
    "time" : {
      "start" : 1695667568320,
      "stop" : 1695667568465,
      "duration" : 145
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8c00b96650ece841",
      "name" : "failed_test",
      "source" : "8c00b96650ece841.png",
      "type" : "image/png",
      "size" : 270299
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_and_teardown', 'log_on_failure')"
  }, {
    "name" : "parentSuite",
    "value" : "Tests"
  }, {
    "name" : "suite",
    "value" : "test_Login(duplicate)"
  }, {
    "name" : "subSuite",
    "value" : "TestPanarayLoginDuplicate"
  }, {
    "name" : "host",
    "value" : "WONIT11L32CV6Z"
  }, {
    "name" : "thread",
    "value" : "23692-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Tests.test_Login(duplicate)"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('setup_and_teardown', 'log_on_failure')" ]
  },
  "source" : "c2e847591c924c55.json",
  "parameterValues" : [ ]
}